plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'war'
}
apply plugin: 'war'

group = 'com.kwShop'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'

	//implementation 'mysql:mysql-connector-java:8.0.32'
	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	//implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.33'


	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	// https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-jasper
	implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '10.1.16'
	implementation 'jakarta.servlet:jakarta.servlet-api' //스프링부트 3.0 이상
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' //스프링부트 3.0 이상
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.0 이상

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.0.5' // 이메일 인증

	implementation 'org.springframework.boot:spring-boot-starter-validation'// 유효성검사 (@Notblank)
	//implementation 'org.springframework.boot:spring-boot-starter-security' //  BCryptPasswordEncoder 사용을 위해 추가

	implementation 'net.coobird:thumbnailator:0.4.18' // 썸네일

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'



}

tasks.named('test') {
	useJUnitPlatform()
}


bootWar.enabled = false
war.enabled = true

war {
	archiveFileName = 'ROOT.war' // 원하는 WAR 파일 이름으로 변경
	from sourceSets.main.output // JSP 파일 및 정적 리소스를 포함하기 위해 main 소스셋을 추가
}

